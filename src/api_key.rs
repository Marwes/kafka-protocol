use std::convert::TryFrom;
#[derive(Eq, PartialEq, Debug)]
pub enum ApiKey {
    Produce = 0,
    Fetch = 1,
    ListOffsets = 2,
    Metadata = 3,
    LeaderAndIsr = 4,
    StopReplica = 5,
    UpdateMetadata = 6,
    ControlledShutdown = 7,
    OffsetCommit = 8,
    OffsetFetch = 9,
    FindCoordinator = 10,
    JoinGroup = 11,
    Heartbeat = 12,
    LeaveGroup = 13,
    SyncGroup = 14,
    DescribeGroups = 15,
    ListGroups = 16,
    SaslHandshake = 17,
    ApiVersions = 18,
    CreateTopics = 19,
    DeleteTopics = 20,
    DeleteRecords = 21,
    InitProducerId = 22,
    OffsetForLeaderEpoch = 23,
    AddPartitionsToTxn = 24,
    AddOffsetsToTxn = 25,
    EndTxn = 26,
    WriteTxnMarkers = 27,
    TxnOffsetCommit = 28,
    DescribeAcls = 29,
    CreateAcls = 30,
    DeleteAcls = 31,
    DescribeConfigs = 32,
    AlterConfigs = 33,
    AlterReplicaLogDirs = 34,
    DescribeLogDirs = 35,
    SaslAuthenticate = 36,
    CreatePartitions = 37,
    CreateDelegationToken = 38,
    RenewDelegationToken = 39,
    ExpireDelegationToken = 40,
    DescribeDelegationToken = 41,
    DeleteGroups = 42,
    ElectPreferredLeaders = 43,
    IncrementalAlterConfigs = 44,
}
impl TryFrom<i16> for ApiKey {
    type Error = &'static str;
    fn try_from(i: i16) -> Result<Self, Self::Error> {
        Ok(match i {
            0 => ApiKey::Produce,
            1 => ApiKey::Fetch,
            2 => ApiKey::ListOffsets,
            3 => ApiKey::Metadata,
            4 => ApiKey::LeaderAndIsr,
            5 => ApiKey::StopReplica,
            6 => ApiKey::UpdateMetadata,
            7 => ApiKey::ControlledShutdown,
            8 => ApiKey::OffsetCommit,
            9 => ApiKey::OffsetFetch,
            10 => ApiKey::FindCoordinator,
            11 => ApiKey::JoinGroup,
            12 => ApiKey::Heartbeat,
            13 => ApiKey::LeaveGroup,
            14 => ApiKey::SyncGroup,
            15 => ApiKey::DescribeGroups,
            16 => ApiKey::ListGroups,
            17 => ApiKey::SaslHandshake,
            18 => ApiKey::ApiVersions,
            19 => ApiKey::CreateTopics,
            20 => ApiKey::DeleteTopics,
            21 => ApiKey::DeleteRecords,
            22 => ApiKey::InitProducerId,
            23 => ApiKey::OffsetForLeaderEpoch,
            24 => ApiKey::AddPartitionsToTxn,
            25 => ApiKey::AddOffsetsToTxn,
            26 => ApiKey::EndTxn,
            27 => ApiKey::WriteTxnMarkers,
            28 => ApiKey::TxnOffsetCommit,
            29 => ApiKey::DescribeAcls,
            30 => ApiKey::CreateAcls,
            31 => ApiKey::DeleteAcls,
            32 => ApiKey::DescribeConfigs,
            33 => ApiKey::AlterConfigs,
            34 => ApiKey::AlterReplicaLogDirs,
            35 => ApiKey::DescribeLogDirs,
            36 => ApiKey::SaslAuthenticate,
            37 => ApiKey::CreatePartitions,
            38 => ApiKey::CreateDelegationToken,
            39 => ApiKey::RenewDelegationToken,
            40 => ApiKey::ExpireDelegationToken,
            41 => ApiKey::DescribeDelegationToken,
            42 => ApiKey::DeleteGroups,
            43 => ApiKey::ElectPreferredLeaders,
            44 => ApiKey::IncrementalAlterConfigs,
            _ => return Err("Invalid ApiKey")
        })
    }
}
